version: '3.8'

networks:
  nagios-net:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: ./.installer/nagios_hooks/container/Dockerfile
    ports:
      - "8080:8080"
    # volumes:
    #   - .:/var/www:Z
    #   - ./.installer/nagios_hooks:/var/www/.installer/nagios_hooks:Z
    depends_on:
      - db
    networks:
      - nagios-net

  db:
    #build:
      #context: .installer/nagios_hooks/database
      #dockerfile: Containerfile
    env_file:
      - .installer/nagios_hooks/database/.env
    # ports:
    #   - "5433:5433"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data:Z
    image: postgres:14
    container_name: nagios-postgres
    # environment:
    #   POSTGRES_USER: nagios_hooks
    #   POSTGRES_PASSWORD: nagios_hooks_secure_password_2024
    #   POSTGRES_DB: nagios_hooks
    volumes:
      - ./data:/var/lib/postgresql/data:Z
      - .installer/nagios_hooks/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:Z
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nagios_hooks -d nagios_hooks"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nagios-net


  eda-rulebook:
    image: registry.redhat.io/ansible-automation-platform-24/de-minimal-rhel9:latest
    container_name: nagios-eda
    volumes:
      - ./eda/rulebooks:/rulebooks:Z
      - ./eda/inventory:/inventory:Z
      - ./eda/playbooks:/playbooks:Z
      - ./eda/logs:/logs:Z

    working_dir: /rulebooks
    entrypoint: ["sh", "/init-entrypoint.sh"]
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    # ports:
    #   - "5000:5000"
    networks:
      - nagios-net

volumes:
  postgres_data:
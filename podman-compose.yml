version: '3.8'

networks:
  lkui-net:
    driver: bridge

services:
  app:
    build: .
    container_name: lkui-app
    ports:
      - "8080:8080"
    # volumes:
    #   - .:/var/www:Z
    depends_on:
      - db
    networks:
      - lkui-net

  db:
    #build:
      #context: .installer/lkui/database
      #dockerfile: Containerfile
    env_file:
      - .installer/lkui/database/.env
    # ports:
    #   - "5432:5432"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data:Z
    image: postgres:14
    container_name: lkui-postgres
    # environment:
    #   POSTGRES_USER: lkui
    #   POSTGRES_PASSWORD: lkui_secure_password_2024
    #   POSTGRES_DB: lkui
    volumes:
      - ./data:/var/lib/postgresql/data:Z
      - .installer/lkui/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:Z
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lkui -d lkui"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lkui-net


  eda-rulebook:
    image: registry.redhat.io/ansible-automation-platform-24/de-minimal-rhel9:latest
    container_name: lkui-eda
    volumes:
      - ./eda/rulebooks:/rulebooks:Z
      - ./eda/inventory:/inventory:Z
      - ./eda/playbooks:/playbooks:Z
      - ./eda/logs:/logs:Z
      - ./eda/letsencrypt:/etc/letsencrypt:Z
      - ./eda/init-entrypoint.sh:/init-entrypoint.sh:Z
    working_dir: /rulebooks
    entrypoint: ["sh", "/init-entrypoint.sh"]
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    # ports:
    #   - "5000:5000"
    networks:
      - lkui-net

volumes:
  postgres_data:
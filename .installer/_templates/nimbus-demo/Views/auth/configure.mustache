<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 2rem auto;
            padding: 20px;
        }
        .header {
            background: #1976d2;
            color: white;
            padding: 2rem;
            text-align: center;
            margin-bottom: 2rem;
            border-radius: 8px 8px 0 0;
        }
        .card {
            background: white;
            padding: 2rem;
            border-radius: 0 0 8px 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #333;
        }
        input[type="text"],
        input[type="password"],
        input[type="url"] {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box;
        }
        input:focus {
            outline: none;
            border-color: #1976d2;
            box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);
        }
        .btn {
            background: #1976d2;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            display: inline-block;
            text-decoration: none;
        }
        .btn:hover {
            background: #1565c0;
        }
        .btn-secondary {
            background: #6c757d;
            margin-left: 1rem;
        }
        .btn-secondary:hover {
            background: #5a6268;
        }
        .info-box {
            background: #e3f2fd;
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 2rem;
            border-left: 4px solid #1976d2;
        }
        .warning-box {
            background: #fff3cd;
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 2rem;
            border-left: 4px solid #ffc107;
        }
        .status-message {
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 1rem;
            display: none;
        }
        .status-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .status-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üîê Keycloak Configuration</h1>
            <p>Configure Keycloak SSO for your Nimbus application</p>
        </div>
        
        <div class="card">
            {{#keycloak_enabled}}
            <div class="info-box">
                <strong>‚úÖ Keycloak is enabled</strong>
                <p>The Keycloak containers are running. Configure the connection details below.</p>
            </div>
            {{/keycloak_enabled}}
            
            {{^keycloak_enabled}}
            <div class="warning-box">
                <strong>‚ö†Ô∏è Keycloak is not enabled</strong>
                <p>Run <code>composer nimbus:add-keycloak {{APP_NAME}}</code> to add Keycloak support.</p>
            </div>
            {{/keycloak_enabled}}
            
            {{#keycloak_enabled}}
            <div id="status-message" class="status-message"></div>
            
            <form id="keycloak-config-form">
                <div class="form-group">
                    <label for="realm">Realm Name</label>
                    <input type="text" id="realm" name="realm" value="{{APP_NAME}}-realm" required>
                    <small style="color: #666;">The Keycloak realm for this application</small>
                </div>
                
                <div class="form-group">
                    <label for="client_id">Client ID</label>
                    <input type="text" id="client_id" name="client_id" value="{{APP_NAME}}-client" required>
                    <small style="color: #666;">The OAuth2 client identifier</small>
                </div>
                
                <div class="form-group">
                    <label for="client_secret">Client Secret</label>
                    <input type="password" id="client_secret" name="client_secret" placeholder="Generate in Keycloak admin console" required>
                    <small style="color: #666;">The OAuth2 client secret (keep this secure!)</small>
                </div>
                
                <div class="form-group">
                    <label for="auth_url">Keycloak URL</label>
                    <input type="url" id="auth_url" name="auth_url" value="http://{{APP_NAME}}-keycloak:8080" required>
                    <small style="color: #666;">The base URL of your Keycloak server</small>
                </div>
                
                <div style="margin-top: 2rem;">
                    <button type="submit" class="btn">Save Configuration</button>
                    <a href="/" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
            
            <div style="margin-top: 3rem; padding-top: 2rem; border-top: 1px solid #ddd;">
                <h3>üìö Setup Instructions</h3>
                <ol>
                    <li>Access the Keycloak admin console at <a href="http://localhost:8080" target="_blank">http://localhost:8080</a></li>
                    <li>Login with username: <code>admin</code> and the password you set</li>
                    <li>Create a new realm with the name specified above</li>
                    <li>Create a new client with the Client ID specified above</li>
                    <li>Set the client access type to "confidential"</li>
                    <li>Add valid redirect URIs: <code>http://localhost:{{APP_PORT}}/*</code></li>
                    <li>Copy the client secret from the Credentials tab</li>
                    <li>Submit this form to save the configuration</li>
                </ol>
                
                <div class="info-box" style="margin-top: 1rem;">
                    <strong>ü§ñ Automated Configuration</strong>
                    <p>When you submit this form, the configuration will be sent to the EDA container, which will automatically:</p>
                    <ul>
                        <li>Create the realm if it doesn't exist</li>
                        <li>Create and configure the client</li>
                        <li>Set up the redirect URIs</li>
                        <li>Update the application configuration</li>
                    </ul>
                </div>
            </div>
            {{/keycloak_enabled}}

        </div>
    </div>
    
    <script>
        document.getElementById('keycloak-config-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const statusDiv = document.getElementById('status-message');
            statusDiv.style.display = 'block';
            statusDiv.className = 'status-message';
            statusDiv.innerHTML = '‚è≥ Saving configuration...';
            
            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData.entries());
            
            try {
                const response = await fetch('/auth/save-config', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    statusDiv.className = 'status-message status-success';
                    statusDiv.innerHTML = '‚úÖ ' + result.message;
                    
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                } else {
                    statusDiv.className = 'status-message status-error';
                    statusDiv.innerHTML = '‚ùå Error: ' + (result.message || 'Failed to save configuration');
                }
            } catch (error) {
                statusDiv.className = 'status-message status-error';
                statusDiv.innerHTML = '‚ùå Error: ' + error.message;
            }
        });
    </script>
</body>
</html>
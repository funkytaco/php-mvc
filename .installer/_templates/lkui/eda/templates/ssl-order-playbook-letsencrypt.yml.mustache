---
- name: Order SSL certificate with Let's Encrypt (EDA triggered)
  hosts: localhost
  gather_facts: no
  
  vars:
    app_name: "<%APP_NAME%>"
    api_prefix: "<%API_PREFIX%>"
    order_update_endpoint: "<%ORDER_UPDATE_ENDPOINT%>"
    
  tasks:
    - name: Ensure python3 and pip installed
      ansible.builtin.shell: |
        microdnf install -y python3 python3-pip
      args:
        creates: /usr/bin/pip3
      ignore_errors: yes
      
    - name: Install certbot via pip3
      ansible.builtin.shell: |
        pip3 install --upgrade certbot
      args:
        creates: /usr/local/bin/certbot
      ignore_errors: yes

    - name: Run Let's Encrypt certificate generation
      ansible.builtin.command: >
        certbot certonly --standalone --non-interactive --agree-tos 
        --preferred-challenges http
        -m {{ email }}
        -d {{ domain }}
      register: letsencrypt_result
      ignore_errors: yes
      
    - name: Debug output on success
      debug:
        msg: "Let's Encrypt certificate generated successfully for {{ domain }}"
      when: letsencrypt_result.rc == 0
      
    - name: Post failure to order endpoint
      ansible.builtin.uri:
        url: "http://{{ app_name }}-app:8080{{ order_update_endpoint }}/{{ order_id }}"
        method: POST
        body_format: json
        body:
          status: "ORDER_FAILED"
          error_message: "Let's Encrypt failed: {{ letsencrypt_result.stderr | default('Unknown error') }}"
        headers:
          Content-Type: "application/json"
        status_code: [200, 201]
      when: letsencrypt_result.rc != 0
      ignore_errors: yes
      
    - name: Post success to order endpoint
      ansible.builtin.uri:
        url: "http://{{ app_name }}-app:8080{{ order_update_endpoint }}/{{ order_id }}"
        method: POST
        body_format: json
        body:
          status: "ORDER_COMPLETED"
          certificate_path: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
        headers:
          Content-Type: "application/json"
        status_code: [200, 201]
      when: letsencrypt_result.rc == 0
      ignore_errors: yes
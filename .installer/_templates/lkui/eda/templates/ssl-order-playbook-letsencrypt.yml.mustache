---
- name: Order SSL certificate with Let's Encrypt (EDA triggered)
  hosts: localhost
  vars:
    app_name: "{{APP_NAME}}"
    order_id: "{{ order_id }}"
    domain: "{{ domain }}"
    email: "{{ email }}"
    api_prefix: "{{API_PREFIX}}"
    order_update_endpoint: "{{ORDER_UPDATE_ENDPOINT}}"
    
  tasks:
    - name: Ensure python3 and pip installed
      package:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
      become: yes
      
    - name: Install certbot via pip3
      pip:
        name: certbot
        executable: pip3
        state: latest

    - name: Run Let's Encrypt certificate generation
      command: >
        certbot certonly --standalone --non-interactive --agree-tos 
        --preferred-challenges http
        -m "{{ email }}"
        -d "{{ domain }}"
      register: letsencrypt_result
      failed_when: false
      
    - name: Debug output on success
      debug:
        msg: "Let's Encrypt certificate generated successfully for {{ domain }}"
      when: letsencrypt_result.rc == 0
      
    - name: Post failure to order endpoint
      uri:
        url: "http://{{APP_NAME}}-app:8080{{ORDER_UPDATE_ENDPOINT}}/{{ order_id }}"
        method: POST
        body_format: json
        body:
          status: "ORDER_FAILED"
          error_message: "Let's Encrypt failed: {{ letsencrypt_result.stderr | default('Unknown error') }}"
        headers:
          Content-Type: "application/json"
        status_code: [200, 201]
      when: letsencrypt_result.rc != 0
      
    - name: Post success to order endpoint
      uri:
        url: "http://{{APP_NAME}}-app:8080{{ORDER_UPDATE_ENDPOINT}}/{{ order_id }}"
        method: POST
        body_format: json
        body:
          status: "ORDER_COMPLETED"
          certificate_path: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
        headers:
          Content-Type: "application/json"
        status_code: [200, 201]
      when: letsencrypt_result.rc == 0
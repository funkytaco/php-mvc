---
- name: SSL Certificate Expiry Check
  hosts: localhost
  gather_facts: yes

  vars:
    callback_url: ""

  tasks:
    - name: Execute certbot certificates command
      ansible.builtin.command:
        cmd: certbot certificates
      register: certbot_output
      ignore_errors: yes
      changed_when: false

    - name: Debug certbot output
      ansible.builtin.debug:
        var: certbot_output.stdout

    - name: Initialize certificates list
      ansible.builtin.set_fact:
        certificates: []

    - name: Parse certbot output for certificate information
      ansible.builtin.set_fact:
        certificates: "{{ certificates + [cert_info] }}"
      vars:
        cert_block: "{{ item }}"
        cert_name: "{{ cert_block | regex_search('Certificate Name: (.+)', '\\1') | first | default('') }}"
        domains_line: "{{ cert_block | regex_search('Domains: (.+)', '\\1') | first | default('') }}"
        expiry_line: "{{ cert_block | regex_search('Expiry Date: ([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}[+\\-][0-9]{2}:[0-9]{2}) \\(VALID: ([0-9]+) days\\)', '\\1', '\\2') }}"
        expiry_date: "{{ expiry_line[0] | default('') }}"
        days_remaining: "{{ expiry_line[1] | default('0') | int }}"
        cert_info:
          domain: "{{ domains_line.split(' ')[0] if domains_line else cert_name }}"
          expiry_date: "{{ expiry_date[:10] if expiry_date else '' }}"
          days_remaining: "{{ days_remaining }}"
          status: "{{ 'Expired' if days_remaining < 0 else ('Expiring Soon' if days_remaining <= 30 else 'Valid') }}"
      loop: "{{ certbot_output.stdout.split('\\n\\n') | select('match', '.*Certificate Name:.*') | list }}"
      when: certbot_output.stdout is defined and certbot_output.stdout != ""

    - name: Fallback - Read certificate files from live directory
      ansible.builtin.find:
        paths: /etc/letsencrypt/live
        file_type: directory
        recurse: no
      register: live_dirs
      when: certificates | length == 0

    - name: Get certificate expiry from cert files (fallback)
      ansible.builtin.shell:
        cmd: "openssl x509 -in {{ item.path }}/cert.pem -noout -enddate -subject | grep -E '(notAfter|subject)'"
      register: cert_info_files
      loop: "{{ live_dirs.files | default([]) }}"
      when: certificates | length == 0
      ignore_errors: yes

    - name: Parse certificate files info (fallback)
      ansible.builtin.set_fact:
        certificates: "{{ certificates + [file_cert_info] }}"
      vars:
        domain_name: "{{ item.item.path | basename }}"
        notafter_line: "{{ item.stdout_lines | select('match', 'notAfter=.*') | first | default('') }}"
        expiry_str: "{{ notafter_line.split('=')[1] if notafter_line else '' }}"
        # Convert to datetime and calculate days
        expiry_epoch: "{{ (expiry_str | to_datetime('%b %d %H:%M:%S %Y %Z')).strftime('%s') | int if expiry_str else 0 }}"
        current_epoch: "{{ ansible_date_time.epoch | int }}"
        days_diff: "{{ ((expiry_epoch | int - current_epoch | int) / 86400) | int if expiry_epoch | int > 0 else 0 }}"
        file_cert_info:
          domain: "{{ domain_name }}"
          expiry_date: "{{ (expiry_str | to_datetime('%b %d %H:%M:%S %Y %Z')).strftime('%Y-%m-%d') if expiry_str else '' }}"
          days_remaining: "{{ days_diff }}"
          status: "{{ 'Expired' if days_diff | int < 0 else ('Expiring Soon' if days_diff | int <= 30 else 'Valid') }}"
      loop: "{{ cert_info_files.results | default([]) }}"
      when: 
        - certificates | length == 0
        - item.stdout is defined
        - item.stdout != ""

    - name: Debug processed certificates
      ansible.builtin.debug:
        var: certificates

    - name: Post certificate data to callback URL
      ansible.builtin.uri:
        url: "{{ callback_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          certificates: "{{ certificates }}"
        status_code: [200, 201]
      register: callback_result
      when: callback_url != ""
      ignore_errors: yes

    - name: Debug callback result
      ansible.builtin.debug:
        var: callback_result
      when: callback_result is defined

    - name: Post expiry_update if no certificates found
      ansible.builtin.uri:
        url: "http://lkui-app:8080/eda/api/expiry-updates"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          message: "No certificates found. Certbot output: {{ certbot_output.stdout | default('No output') }}"
        status_code: [200, 201]
      register: posterror_result
      when: 
        - certificates | length == 0
      ignore_errors: yes

    - name: Post expiry_update if certificates found
      ansible.builtin.uri:
        url: "http://lkui-app:8080/eda/api/expiry-updates"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          message: "Checked certbot for expiry updates."
        status_code: [200, 201]
      register: posterror_result
      when: 
        - certificates | length > 0
      ignore_errors: yes


    # - name: Debug post error result
    #   ansible.builtin.debug:
    #     var: "{{ certbot_output.stdout }}"
    #   when: posterror_result is defined

<?php

/**
 * PhpStorm Meta file for Nimbus Framework
 * 
 * Provides advanced IDE support for PhpStorm/IntelliJ IDEA
 * 
 * @author Generated by Nimbus Framework
 * @license Apache-2.0
 * @copyright 2025 SmallCloud, LLC
 */

namespace PHPSTORM_META {

    // Auryn Injector type resolution
    override(
        \Auryn\Injector::make(0),
        map([
            'PDO' => \PDO::class,
            'Main\Renderer\Renderer' => \Main\Renderer\MustacheRenderer::class,
            '' => '@',
        ])
    );

    // FastRoute dispatcher results
    override(
        \FastRoute\simpleDispatcher(),
        type(0)
    );

    // Container resolution patterns
    expectedArguments(
        \Auryn\Injector::make(),
        0,
        'PDO',
        'Main\Renderer\Renderer',
        argumentsSet('nimbusServices')
    );

    // Route handler patterns
    expectedArguments(
        \FastRoute\RouteCollector::addRoute(),
        0,
        'GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'
    );

    expectedArguments(
        \FastRoute\RouteCollector::addRoute(),
        2,
        argumentsSet('routeHandlers')
    );

    // HTTP status codes
    expectedArguments(
        \Nimbus\Controller\AbstractController::json(),
        1,
        200, 201, 204, 400, 401, 403, 404, 405, 422, 500, 502, 503
    );

    expectedArguments(
        \Nimbus\Controller\AbstractController::error(),
        1,
        400, 401, 403, 404, 405, 422, 500, 502, 503
    );

    expectedArguments(
        \Nimbus\Controller\AbstractController::redirect(),
        1,
        301, 302, 303, 307, 308
    );

    // Template paths for Mustache rendering
    expectedArguments(
        \Main\Renderer\Renderer::render(),
        0,
        argumentsSet('templatePaths')
    );

    // Common argument sets
    registerArgumentsSet(
        'nimbusServices',
        'PDO',
        'Main\Renderer\Renderer'
    );

    registerArgumentsSet(
        'routeHandlers',
        'App\Controllers\IndexController',
        'App\Controllers\AuthController'
    );

    registerArgumentsSet(
        'templatePaths',
        'demo/index',
        'auth/configure',
        'home/index',
        'about',
        'layout'
    );

    // SQL operations for models
    expectedReturnValues(
        \PDO::query(),
        \PDOStatement::class
    );

    expectedReturnValues(
        \PDO::prepare(),
        \PDOStatement::class
    );

    // JSON responses return types
    exitPoint(\Nimbus\Controller\AbstractController::json());
    exitPoint(\Nimbus\Controller\AbstractController::error());
    exitPoint(\Nimbus\Controller\AbstractController::redirect());

    // Database result types
    override(
        \PDOStatement::fetch(),
        type(0) == \PDO::FETCH_ASSOC ? array : mixed
    );

    override(
        \PDOStatement::fetchAll(),
        type(0) == \PDO::FETCH_ASSOC ? array[] : array
    );
}